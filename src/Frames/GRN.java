/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import DB.DB;
import java.awt.Color;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chrishmal Rodrigo
 */
public class GRN extends javax.swing.JFrame {

    /**
     * Creates new form GRN
     */
    public GRN() {
        initComponents();
        genaratepolist();
        genarateGrnId();
        jScrollPane2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        lbl_grnid = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lbl_suplier = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txt_qty = new javax.swing.JTextField();
        txt_bprice = new javax.swing.JTextField();
        txt_sprice = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txt_itemId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        rad_itm = new javax.swing.JRadioButton();
        rad_sup = new javax.swing.JRadioButton();
        lbl_subtotal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 280, -1));

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 0, 36, 620));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));

        jLabel20.setText("GRN Id :-");

        jLabel21.setText("Suplier Id :-");

        lbl_suplier.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lbl_suplierPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_grnid, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_suplier, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(806, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_grnid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lbl_suplier, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 30));

        txt_search.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });
        jPanel2.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 280, 30));

        jList1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 290, 190));

        jLabel1.setText("Purchasing Orders");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 180, 20));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Qty On Hand", "Orderd Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 600, 150));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "buying priice", "selling price", "Qty", "expire date", "waranty", "Total", "Suplier id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(75);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(8).setResizable(false);
        }

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 900, 170));

        txt_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qtyActionPerformed(evt);
            }
        });
        jPanel2.add(txt_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 300, 140, 30));

        txt_bprice.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                txt_bpriceVetoableChange(evt);
            }
        });
        jPanel2.add(txt_bprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 140, 30));
        jPanel2.add(txt_sprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 140, 30));

        jButton1.setText("Remove All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 220, 110, 30));

        jButton2.setText("Edite");
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 100, 110, 30));

        jButton6.setText("Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 160, 110, 30));

        jButton7.setText("Edite");
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 440, 110, 30));

        jButton8.setText("Remove");
        jPanel2.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 510, 110, 30));

        jButton9.setText("Remove All");
        jPanel2.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 580, 110, 30));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Warranty");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 280, 130, 20));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Buying Price");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 140, 20));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Selling Price");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 140, 20));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Exp Date");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 280, 140, 20));

        jButton10.setText("Add Stock");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 370, 340, 40));
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 300, 140, 30));
        jPanel2.add(txt_itemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 140, 30));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Item Id");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 140, 20));
        jPanel2.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 300, 50, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "days", "weeks", "months", "years", "life time" }));
        jComboBox1.setSelectedIndex(4);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 300, 80, 30));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Quntity");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 140, 20));

        buttonGroup1.add(rad_itm);
        rad_itm.setSelected(true);
        rad_itm.setText("item");
        jPanel2.add(rad_itm, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, -1, 30));

        buttonGroup1.add(rad_sup);
        rad_sup.setText("Suplier");
        jPanel2.add(rad_sup, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, 30));

        lbl_subtotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_subtotal.setText("0");
        jPanel2.add(lbl_subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 420, 90, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Subtotal");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 420, 70, 20));

        jLayeredPane2.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 1106, 620));

        jPanel4.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setText("jButton3");
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 210, 50));

        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 210, 50));

        jButton5.setText("jButton3");
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 210, 50));

        jLayeredPane2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 689, 1106, 79));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jButton11.setText("jButton10");
        jButton11.setContentAreaFilled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 110));

        jButton12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice_icon_mini.png"))); // NOI18N
        jButton12.setText("Invoice");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton12.setIconTextGap(30);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 240, 60));

        jButton13.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/po_icon_mini.png"))); // NOI18N
        jButton13.setText("P O");
        jButton13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton13.setIconTextGap(30);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 240, 60));

        jButton14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_suplier_icon_mini.png"))); // NOI18N
        jButton14.setText("New Suplier");
        jButton14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton14.setIconTextGap(30);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 240, 60));

        jButton15.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_item_icon_mini.png"))); // NOI18N
        jButton15.setText("New Item");
        jButton15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton15.setIconTextGap(30);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 240, 60));

        jButton18.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_customer_mini.png"))); // NOI18N
        jButton18.setText("New Customer");
        jButton18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton18.setIconTextGap(30);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 240, 60));

        jButton19.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/report__icon_mini.png"))); // NOI18N
        jButton19.setText("reports");
        jButton19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton19.setIconTextGap(30);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 240, 60));

        jLayeredPane2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 261, 738));

        jPanel7.setBackground(new java.awt.Color(102, 153, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("G. R. N.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(967, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
        );

        jLayeredPane2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 1106, 40));

        jPanel3.setBackground(new java.awt.Color(0, 102, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 102, 204));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jPanel5.add(jLabel12);

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 0, 60, 30));

        jLayeredPane2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, -1));

        getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            DefaultTableModel dtm1 = (DefaultTableModel) jTable2.getModel();
            int rowCount = jTable2.getRowCount();
            System.out.println("row count = " + rowCount);
            String grn_id = lbl_grnid.getText();
            String sup_id = dtm1.getValueAt(0, 8).toString();
            DB.iud("INSERT INTO grn values('" + grn_id + "',now(),'" + subtotal + "','" + sup_id + "','" + Common.SystemData.getSystemUser() + "')");
            while (rowCount > 0) {
                System.out.println("row count = " + rowCount);
                String item_id = dtm1.getValueAt(0, 0).toString();

                double bprice = (Double) dtm1.getValueAt(0, 2);
                double sprice = (Double) dtm1.getValueAt(0, 3);
                int qty = Integer.parseInt(dtm1.getValueAt(0, 4).toString());
                String expdate = dtm1.getValueAt(0, 5).toString();
                if (expdate.equals("null")) {
                    expdate = null;
                }
                oldStock = false;
                String stock_id = genarateStockid(item_id, bprice, sprice, expdate);

                String waranty = dtm1.getValueAt(0, 6).toString();
                int count = genaratecount();
                System.out.println(count);
                if (oldStock) {

                    DB.iud("UPDATE stock SET qty = qty + '" + qty + "' WHERE stock_id = '" + stock_id + "'");
                    DB.iud("INSERT INTO stock_details VALUES('" + count + "', '" + stock_id + "','" + qty + "',now(),'" + grn_id + "','update')");

                } else {
                    DB.iud("INSERT INTO stock VALUES('" + stock_id + "','" + item_id + "','" + bprice + "','" + sprice + "','" + expdate + "','" + qty + "','" + Common.SystemData.getSystemUser() + "',1)");
                    DB.iud("INSERT INTO grn_details VALUES('" + count + "', '" + stock_id + "','" + qty + "',now(),'" + grn_id + "','new stock')");
                }
                DB.iud("UPDATE quntity SET qty = qty + '" + qty + "' WHERE item_id = '" + item_id + "'");
                dtm1.removeRow(0);
                --rowCount;
            }
            subtotal = 0;
            lbl_subtotal.setText(subtotal + "");
            JOptionPane.showMessageDialog(this, "all is well");
            lbl_suplier.setText(null);
            genarateGrnId();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        jPanel5.setBackground(Color.red);
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited
        jPanel5.setBackground(new java.awt.Color(0, 102, 204));
    }//GEN-LAST:event_jPanel5MouseExited

    private void txt_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_qtyActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        if (jTable1.isRowSelected(jTable1.getSelectedRow()) && !(txt_qty.getText().isEmpty()) && !(txt_bprice.getText().isEmpty()) && !(txt_sprice.getText().isEmpty())) {
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            String name = dtm1.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String itemid = txt_itemId.getText();
            double bprice = Double.parseDouble(txt_bprice.getText());
            double sprice = Double.parseDouble(txt_sprice.getText());
            String sup_id = lbl_suplier.getText();
            int qty = Integer.parseInt(txt_qty.getText());
            String expdate = "null";
            String w2 = "null";
            int w1 = 0;

            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            if (jDateChooser1.isEnabled() && jDateChooser1.getDate() != null) {
                expdate = sdf.format(jDateChooser1.getDate());

            }
            if (jSpinner1.isEnabled()) {
                w1 = (Integer) jSpinner1.getValue();

                w2 = jComboBox1.getSelectedItem().toString();

            }

            DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
            Vector v = new Vector();
            int total = (int) (bprice * qty);
            v.add(itemid);
            v.add(name);
            v.add(bprice);
            v.add(sprice);
            v.add(qty);
            v.add(expdate);

            if (jSpinner1.isEnabled()) {
                v.add(w1 + "-" + w2);
            } else {
                v.add(w2);

            }
            v.add(total);
            v.add(sup_id);
            subtotal = subtotal + total;
            lbl_subtotal.setText(subtotal + "");

            dtm2.addRow(v);
            dtm1.removeRow(jTable1.getSelectedRow());
            txt_itemId.setText(null);
            txt_bprice.setText(null);
            txt_sprice.setText(null);
            txt_qty.setText(null);
            jDateChooser1.setDate(null);
            jSpinner1.setValue(1);
            jComboBox1.setSelectedIndex(0);

            rad_sup.setEnabled(true);
            jList1.setEnabled(true);

        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
        dtm1.setRowCount(0);
        po_id = jList1.getSelectedValue().substring(0, 8).replace("-", "").trim();

        try {
            ResultSet rs_suplier = DB.search("SELECT suplier FROM po WHERE id = '" + po_id + "'");

            if (rs_suplier.next()) {

                String sup_id = rs_suplier.getString("suplier");

                ResultSet rs_itm = DB.search("SELECT po_item.itm_id, po_item.qty ,item.name FROM po_item  INNER JOIN item ON po_item.itm_id = item.id WHERE po_id = '" + po_id + "'");
                lbl_suplier.setText(sup_id);
                while (rs_itm.next()) {
                    String itm_id = rs_itm.getString("po_item.itm_id");

                    String itm_OrderedQty = rs_itm.getString("po_item.qty");
                    String itm_name = rs_itm.getString("item.name");
                    ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + itm_id + "'");
                    if (rs_qty.next()) {
                        int qty = rs_qty.getInt("x");
//                        if (qty < 5) {
                        //                      }

                        Vector v = new Vector();

                        v.add(itm_id);
                        v.add(itm_name);
                        v.add(qty);
                        v.add(itm_OrderedQty);

                        dtm1.addRow(v);

                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jList1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel dtm2 = (DefaultTableModel) jTable1.getModel();
        int rowNum = jTable1.getSelectedRow();
        txt_itemId.setText(jTable1.getValueAt(rowNum, 0).toString());

        txt_qty.setText(jTable1.getValueAt(rowNum, 3).toString());
        txt_bprice.grabFocus();
        try {
            ResultSet check1 = DB.search("SELECT waranty,isexpire FROM item WHERE id = '" + jTable1.getValueAt(rowNum, 0).toString() + "'");
            if (check1.next()) {

                boolean waranty = check1.getBoolean("waranty");
                boolean expiry = check1.getBoolean("isexpire");
                if (waranty) {
                    jSpinner1.setEnabled(true);
                    jComboBox1.setEnabled(true);

                } else {
                    jSpinner1.setEnabled(false);
                    jComboBox1.setEnabled(false);

                }
                if (expiry) {
                    jDateChooser1.setEnabled(true);
                } else {
                    jDateChooser1.setEnabled(false);

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void lbl_suplierPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lbl_suplierPropertyChange
//        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
//        int rowcount = jTable2.getRowCount();
//        for (int i = 0; rowcount > i; i++) {
//            dtm2.removeRow(0);
//
//        }
    }//GEN-LAST:event_lbl_suplierPropertyChange

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased

        String search_text = txt_search.getText();
        if (rad_sup.isSelected()) {
            try {

                ResultSet set1 = DB.search("SELECT id, fname, company FROM suplier WHERE company LIKE '" + search_text + "%" + "' ");

                Vector v = new Vector();
                jScrollPane2.setVisible(false);

                while (set1.next()) {

                    jScrollPane2.setVisible(true);
                    String id = set1.getString("id");
                    String name = set1.getString("fname");
                    String company = set1.getString("company");

                    String showname = company + " (" + name + ")" + "  -  " + id;
                    v.add(showname);
                    jList2.setListData(v);

                }
                if (txt_search.getText().equals("")) {
                    jScrollPane2.setVisible(false);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {

            try {

                ResultSet set2 = DB.search("SELECT id, name FROM item WHERE name LIKE '" + search_text + "%" + "' ");
                Vector v = new Vector();
                jScrollPane2.setVisible(false);

                while (set2.next()) {

                    jScrollPane2.setVisible(true);
                    String id = set2.getString("id");
                    String name = set2.getString("name");

                    String showname = name + "  -  " + id;
                    v.add(showname);
                    jList2.setListData(v);

                }
                if (txt_search.getText().equals("")) {
                    jScrollPane2.setVisible(false);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_searchKeyReleased

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        String selected_text = jList2.getSelectedValue();
        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
  int rowCount = jTable1.getRowCount();
        if (rowCount >=1) {
                while(rowCount > 0){
                dtm1.removeRow(0); 
                }
                 lbl_suplier.setText("");
                
            }

            if (rad_itm.isSelected()) {
                String item_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();

                try {
                    ResultSet set1 = DB.search("SELECT suplier, name FROM item WHERE id = '" + item_id + "' ");
                    if (set1.next()) {
                        String suplier = set1.getString("suplier");
                        String item_name = set1.getString("name");
                        int dis = JOptionPane.showConfirmDialog(this, "Do you want to display all the items of suplier");
                        if (dis == JOptionPane.YES_OPTION) {
                            ResultSet set2 = DB.search("SELECT id, name FROM item WHERE suplier = '" + suplier + "' ");
                            lbl_suplier.setText(suplier);

                            while (set2.next()) {
                                String id = set2.getString("id");
                                String name = set2.getString("name");
                                ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + id + "'");
                                if (rs_qty.next()) {
                                    int onHand = rs_qty.getInt("x");
                                    Vector v = new Vector();

                                    v.add(id);
                                    v.add(name);
                                    v.add(onHand);
                                    v.add(0);

                                    dtm1.addRow(v);
                                    jScrollPane2.setVisible(false);

                                }
                            }

                        } else if (dis == JOptionPane.NO_OPTION) {
                            ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + item_id + "'");
                            lbl_suplier.setText(suplier);
                            if (rs_qty.next()) {
                                int onHand = rs_qty.getInt("x");
                                Vector v = new Vector();

                                v.add(item_id);
                                v.add(item_name);
                                v.add(onHand);
                                v.add(0);

                                dtm1.addRow(v);
                                jScrollPane2.setVisible(false);
                            }

                        }

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            } else {
                String sup_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();
                lbl_suplier.setText(sup_id);
                try {
                    ResultSet set2 = DB.search("SELECT id, name FROM item WHERE suplier = '" + sup_id + "' ");
                    dtm1.setRowCount(0);
                    while (set2.next()) {
                        String id = set2.getString("id");
                        String name = set2.getString("name");
                        ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + id + "'");
                        if (rs_qty.next()) {
                            int onHand = rs_qty.getInt("x");
                            Vector v = new Vector();

                            v.add(id);
                            v.add(name);
                            v.add(onHand);
                            v.add(0);

                            dtm1.addRow(v);
                            jScrollPane2.setVisible(false);

                        }
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
            txt_search.setText(null);
        
//        if (rad_itm.isSelected()) {
//            String item_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();
//            try {
//                //   ResultSet set2 = DB.search("SELECT id, name FROM item WHERE id = '" + item_id + "' ");
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//
//        } else {
//            String sup_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();
//
//        }
    }//GEN-LAST:event_jList2MouseClicked

    private void txt_bpriceVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_txt_bpriceVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bpriceVetoableChange

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Home home = new Home();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Invoice invoice = new Invoice();
        invoice.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Po po = new Po();
        po.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Suplier suplier = new Suplier();
        suplier.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        ItemManagement item = new ItemManagement();
        item.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        Customer customer = new Customer();
        customer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        Reports report = new Reports();
        report.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed
        if (jList2.isVisible()) {

            if (evt.getKeyCode() == 40) {
                jList2.grabFocus();
                jList2.setSelectedIndex(0);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchKeyPressed

    private void jList2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList2KeyPressed
        if (evt.getKeyCode() == 10) {
            
            String selected_text = jList2.getSelectedValue();
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            int rowCount = jTable1.getRowCount();
            if (rowCount >=1) {
                while(rowCount > 0){
                dtm1.removeRow(0); 
                }
                               lbl_suplier.setText("");
                
            }
                if (rad_itm.isSelected()) {
                    String item_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();

                    try {
                        ResultSet set1 = DB.search("SELECT suplier, name FROM item WHERE id = '" + item_id + "' ");
                        if (set1.next()) {
                            String suplier = set1.getString("suplier");
                            String item_name = set1.getString("name");
                            int dis = JOptionPane.showConfirmDialog(this, "Do you want to display all the items of suplier");
                           
                            if (dis == JOptionPane.YES_OPTION) {
                                ResultSet set2 = DB.search("SELECT id, name FROM item WHERE suplier = '" + suplier + "' ");
                                lbl_suplier.setText(suplier);

                                while (set2.next()) {
                                    String id = set2.getString("id");
                                    String name = set2.getString("name");
                                    ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + id + "'");
                                    if (rs_qty.next()) {
                                        int onHand = rs_qty.getInt("x");
                                        Vector v = new Vector();

                                        v.add(id);
                                        v.add(name);
                                        v.add(onHand);
                                        v.add(0);

                                        dtm1.addRow(v);
                                        jScrollPane2.setVisible(false);

                                    }
                                }

                            } else if (dis == JOptionPane.NO_OPTION) {
                                ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + item_id + "'");
                                lbl_suplier.setText(suplier);
                                if (rs_qty.next()) {
                                    int onHand = rs_qty.getInt("x");
                                    Vector v = new Vector();

                                    v.add(item_id);
                                    v.add(item_name);
                                    v.add(onHand);
                                    v.add(0);

                                    dtm1.addRow(v);
                                    jScrollPane2.setVisible(false);
                                }

                            }

                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else {
                    String sup_id = selected_text.substring(selected_text.length() - 8, selected_text.length()).replace("-", "").trim();
                    lbl_suplier.setText(sup_id);
                    try {
                        ResultSet set2 = DB.search("SELECT id, name FROM item WHERE suplier = '" + sup_id + "' ");
                        dtm1.setRowCount(0);
                        while (set2.next()) {
                            String id = set2.getString("id");
                            String name = set2.getString("name");
                            ResultSet rs_qty = DB.search("SELECT SUM(qty) as x FROM stock WHERE item_id = '" + id + "'");
                            if (rs_qty.next()) {
                                int onHand = rs_qty.getInt("x");
                                Vector v = new Vector();

                                v.add(id);
                                v.add(name);
                                v.add(onHand);
                                v.add(0);

                                dtm1.addRow(v);
                                jScrollPane2.setVisible(false);

                            }
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
                txt_search.setText(null);
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jList2KeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int rowCount = jTable1.getRowCount();
        if (rowCount > 1) {
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            dtm1.removeRow(jTable1.getSelectedRow());
            
        }else if(rowCount == 1){
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            dtm1.removeRow(jTable1.getSelectedRow());
        lbl_suplier.setText("");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          int rowCount = jTable1.getRowCount();
          while(rowCount > 0){
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            dtm1.removeRow(0);
            rowCount--;
          } 
                lbl_suplier.setText("");
  
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GRN().setVisible(true);
            }
        });
    }

    private void genaratepolist() {
        try {
            ResultSet rs_polist = DB.search("SELECT po.id, suplier.fname, suplier.lname, suplier.company FROM po INNER JOIN suplier ON po.suplier = suplier.id WHERE po.status = 1");
            Vector v = new Vector();

            while (rs_polist.next()) {

                String po_id = rs_polist.getString("po.id");
                String po_sup_fname = rs_polist.getString("suplier.fname");
                String po_sup_lname = rs_polist.getString("suplier.lname");
                String po_sup_company = rs_polist.getString("suplier.company");

                v.add(po_id + "  -  " + po_sup_company + " (" + po_sup_fname + ")");
                jList1.setListData(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void genarateGrnId() {
        try {
            ResultSet dataFetch = DB.search("SELECT COUNT('id') AS x FROM grn ");
            if (dataFetch.next()) {
                int count = Integer.parseInt(dataFetch.getString("x"));
                count++;
                lbl_grnid.setText("ST" + count);
                txt_search.grabFocus();

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private int genaratecount() {
        int count = 0;
        try {
            ResultSet dataFetch = DB.search("SELECT COUNT('count') AS x FROM grn_details ");
            if (dataFetch.next()) {
                count = dataFetch.getInt("x");
                count++;

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return count;
    }

    private String genarateStockid(String item_id, double bprice, double sprice, String expdate) {
        String stockid = null;
        try {

            ResultSet dataFetch = DB.search("SELECT COUNT('stock_id') AS x FROM stock WHERE stock_id like '" + item_id + "-%" + "'  ");

            if (dataFetch.next()) {
                int count = Integer.parseInt(dataFetch.getString("x"));

                if (count == 0) {
                    count++;
                    stockid = item_id + "-ST" + count;
                    oldStock = false;
                } else {
                    count++;

                    int num = count;
                    while (num >= 1) {
                        ResultSet search = DB.search("SELECT stock_id FROM stock WHERE cost_price = '" + bprice + "' AND selling_price = '" + sprice + "' AND expdate = '" + expdate + "' AND  stock_id = '" + item_id + "-st" + num + "' AND status  = 1");
                        if (search.next()) {
                            System.out.println("update triger");
                            stockid = search.getString("stock_id");
                            oldStock = true;
                            break;
                        } else {
                            System.out.println("new stock triger");
                            stockid = item_id + "-ST" + count;
                            oldStock = false;

                        }
                        --num;
                    }

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return stockid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbl_grnid;
    private javax.swing.JLabel lbl_subtotal;
    private javax.swing.JLabel lbl_suplier;
    private javax.swing.JRadioButton rad_itm;
    private javax.swing.JRadioButton rad_sup;
    private javax.swing.JTextField txt_bprice;
    private javax.swing.JTextField txt_itemId;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_sprice;
    // End of variables declaration//GEN-END:variables
boolean oldStock = false;
    String po_id;
    double subtotal;
}
