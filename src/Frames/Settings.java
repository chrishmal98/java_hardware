/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Common.SystemData;
import DB.DB;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chrishmal Rodrigo
 */
public class Settings extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();

        loadTable();
        jTable1.getTableHeader().setFont(new java.awt.Font("Nunito", 0, 15));
        jTable2.getTableHeader().setFont(new java.awt.Font("Nunito", 0, 15));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        txt_search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_nPrice = new javax.swing.JTextField();
        txt_Oprice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        rad_brand = new javax.swing.JRadioButton();
        rad_name = new javax.swing.JRadioButton();
        rad_sup = new javax.swing.JRadioButton();
        rad_cat = new javax.swing.JRadioButton();
        rad_item = new javax.swing.JRadioButton();
        rad_stock = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        SMP_unite = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        SMP_name = new javax.swing.JTextField();
        MMP_unite = new javax.swing.JTextField();
        MMP_name = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        sub_price_unite = new javax.swing.JTextField();
        Sub_price = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btn_save1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txt_search1 = new javax.swing.JTextField();
        rad_name1 = new javax.swing.JRadioButton();
        rad_cat1 = new javax.swing.JRadioButton();
        rad_sup1 = new javax.swing.JRadioButton();
        rad_brand1 = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel6.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 220, 30));

        jScrollPane3.setViewportView(jList2);

        jPanel6.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 220, -1));
        jPanel6.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 220, 30));
        jPanel6.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 50, 220, 30));

        jLabel6.setText("Item Id");
        jPanel6.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 210, 20));

        jLabel7.setText("Barcode");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 210, 20));

        jLabel8.setText("Search");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 190, 20));

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("Sub unite");
        jPanel6.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 270, 220, 30));

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setText(" Main mesure unite");
        jPanel6.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 220, 30));

        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setText("Calculation");
        jPanel6.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 270, 220, 30));
        jPanel6.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 480, 140, 30));
        jPanel6.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 100, 150));
        jPanel6.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 60, 30));
        jPanel6.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 420, 140, 30));

        jLabel9.setText("sub unite ");
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 330, 50, 20));

        jLabel10.setText("m unite");
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, 40, 20));
        jPanel6.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 360, 140, 30));
        jPanel6.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 60, 30));
        jPanel6.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, 60, 30));
        jPanel6.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 60, 30));
        jPanel6.add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 480, 60, 30));
        jPanel6.add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 60, 30));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("=");
        jPanel6.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, 20, -1));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("=");
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, 20, -1));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("=");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, 20, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jTabbedPane1.setOpaque(true);

        jPanel4.setBackground(java.awt.Color.white);
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_search.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        txt_search.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        txt_search.setText("Search");
        txt_search.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_search.setOpaque(false);
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchFocusLost(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });
        jPanel4.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 430, 40));

        jTable1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "On Hand", "Category", "Suplier", "Brand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(153, 204, 255));
        jTable1.setRowHeight(20);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 940, 200));

        txt_nPrice.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        txt_nPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_nPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.add(txt_nPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 530, 170, 30));

        txt_Oprice.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        txt_Oprice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Oprice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_Oprice.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.add(txt_Oprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, 170, 30));

        jLabel1.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("New Price");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 560, 170, 30));

        jLabel5.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Old Price");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 560, 170, 30));

        jButton1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 630, 160, 40));

        jButton2.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, 160, 40));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying-glass.png"))); // NOI18N
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 90, 30, 30));

        buttonGroup1.add(rad_brand);
        rad_brand.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_brand.setText("Brand");
        rad_brand.setContentAreaFilled(false);
        rad_brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_brandActionPerformed(evt);
            }
        });
        jPanel4.add(rad_brand, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, 93, 23));

        buttonGroup1.add(rad_name);
        rad_name.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_name.setSelected(true);
        rad_name.setText("Name");
        rad_name.setContentAreaFilled(false);
        jPanel4.add(rad_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 93, 23));

        buttonGroup1.add(rad_sup);
        rad_sup.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_sup.setText("Suplier");
        rad_sup.setContentAreaFilled(false);
        rad_sup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_supActionPerformed(evt);
            }
        });
        jPanel4.add(rad_sup, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 93, 23));

        buttonGroup1.add(rad_cat);
        rad_cat.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_cat.setText("Category");
        rad_cat.setContentAreaFilled(false);
        jPanel4.add(rad_cat, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 93, 23));

        buttonGroup3.add(rad_item);
        rad_item.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        rad_item.setText("By Item");
        jPanel4.add(rad_item, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 90, 90, -1));

        buttonGroup3.add(rad_stock);
        rad_stock.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        rad_stock.setSelected(true);
        rad_stock.setText("By Stock");
        jPanel4.add(rad_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 50, 90, -1));

        jLabel22.setBackground(new java.awt.Color(106, 162, 186));
        jLabel22.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Price Change");
        jLabel22.setOpaque(true);
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 30));

        jTable3.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock ID", "Name", "Quntityl", "Exp Date", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 860, 110));

        jLabel2.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel2.setText("Stocks");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 100, 20));

        jLabel4.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel4.setText("Items");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 100, 20));

        jTabbedPane1.addTab("Price Change", jPanel4);

        jPanel9.setBackground(java.awt.Color.white);
        jPanel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SMP_unite.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        SMP_unite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMP_uniteActionPerformed(evt);
            }
        });
        jPanel9.add(SMP_unite, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 50, 30));

        jTextField21.setEditable(false);
        jTextField21.setBackground(java.awt.Color.white);
        jTextField21.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField21.setText("Main Mesure Unit");
        jTextField21.setBorder(null);
        jPanel9.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, 160, 30));

        jTextField22.setEditable(false);
        jTextField22.setBackground(java.awt.Color.white);
        jTextField22.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField22.setText("Sub Mesure Unit");
        jTextField22.setBorder(null);
        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        jPanel9.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 530, 160, 30));

        SMP_name.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        SMP_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMP_nameActionPerformed(evt);
            }
        });
        jPanel9.add(SMP_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 560, 110, 30));

        MMP_unite.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        jPanel9.add(MMP_unite, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 560, 50, 30));

        MMP_name.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        MMP_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MMP_nameActionPerformed(evt);
            }
        });
        jPanel9.add(MMP_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 560, 110, 30));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Rs:");
        jPanel9.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 560, 40, 30));

        jTextField26.setEditable(false);
        jTextField26.setBackground(java.awt.Color.white);
        jTextField26.setFont(new java.awt.Font("Nunito SemiBold", 0, 14)); // NOI18N
        jTextField26.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField26.setText("Price");
        jTextField26.setBorder(null);
        jPanel9.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 530, 250, 30));

        sub_price_unite.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        sub_price_unite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sub_price_uniteFocusGained(evt);
            }
        });
        jPanel9.add(sub_price_unite, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 560, 100, 30));

        Sub_price.setFont(new java.awt.Font("Nunito", 1, 15)); // NOI18N
        jPanel9.add(Sub_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 560, 60, 30));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("=");
        jPanel9.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 560, 40, 30));

        btn_save1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        btn_save1.setText("Save");
        btn_save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save1ActionPerformed(evt);
            }
        });
        jPanel9.add(btn_save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 630, 640, 50));

        jTable2.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "On Hand", "Category", "Suplier", "Brand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setGridColor(new java.awt.Color(153, 204, 255));
        jTable2.setRowHeight(20);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        jPanel9.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 940, 200));

        txt_search1.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        txt_search1.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        txt_search1.setText("Search");
        txt_search1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_search1.setOpaque(false);
        txt_search1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_search1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_search1FocusLost(evt);
            }
        });
        txt_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_search1KeyReleased(evt);
            }
        });
        jPanel9.add(txt_search1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 430, 40));

        buttonGroup2.add(rad_name1);
        rad_name1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_name1.setSelected(true);
        rad_name1.setText("Name");
        rad_name1.setContentAreaFilled(false);
        jPanel9.add(rad_name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 93, 23));

        buttonGroup2.add(rad_cat1);
        rad_cat1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_cat1.setText("Category");
        rad_cat1.setContentAreaFilled(false);
        jPanel9.add(rad_cat1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 93, 23));

        buttonGroup2.add(rad_sup1);
        rad_sup1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_sup1.setText("Suplier");
        rad_sup1.setContentAreaFilled(false);
        rad_sup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_sup1ActionPerformed(evt);
            }
        });
        jPanel9.add(rad_sup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 93, 23));

        buttonGroup2.add(rad_brand1);
        rad_brand1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        rad_brand1.setText("Brand");
        rad_brand1.setContentAreaFilled(false);
        rad_brand1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_brand1ActionPerformed(evt);
            }
        });
        jPanel9.add(rad_brand1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, 93, 23));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying-glass.png"))); // NOI18N
        jPanel9.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 30, 30));

        jLabel18.setBackground(new java.awt.Color(106, 162, 186));
        jLabel18.setFont(new java.awt.Font("Nunito Black", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Mesure Unites ");
        jLabel18.setOpaque(true);
        jPanel9.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 30));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Masure Unit  ", "Equation", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setResizable(false);
            jTable4.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable4.getColumnModel().getColumn(1).setResizable(false);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable4.getColumnModel().getColumn(2).setResizable(false);
            jTable4.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable4.getColumnModel().getColumn(3).setResizable(false);
            jTable4.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable4.getColumnModel().getColumn(4).setResizable(false);
            jTable4.getColumnModel().getColumn(4).setPreferredWidth(60);
        }

        jPanel9.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 860, 130));

        jLabel17.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel17.setText("Mesure Units");
        jPanel9.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 100, 20));

        jLabel23.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel23.setText("Items");
        jPanel9.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 20));

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 440, 70, 60));

        jButton5.setText("Edite");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 370, 70, 60));

        jLabel24.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel24.setText("Add New Mesure Unit");
        jLabel24.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel9.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 940, 20));

        jLabel26.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Rs");
        jPanel9.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 590, 40, -1));

        jLabel27.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText(" 1");
        jPanel9.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 590, 50, -1));

        jLabel28.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Kg");
        jPanel9.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 590, 110, -1));

        jLabel30.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 102, 102));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("g");
        jPanel9.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 590, 110, -1));

        jLabel31.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(102, 102, 102));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("1 - g ");
        jPanel9.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 590, 100, -1));

        jLabel32.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("50");
        jPanel9.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 590, 60, -1));

        jLabel33.setFont(new java.awt.Font("Nunito", 0, 11)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(102, 102, 102));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("1000");
        jPanel9.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 590, 50, -1));

        jTabbedPane1.addTab("Sub Item", jPanel9);

        jPanel2.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1106, 698));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 1106, 698));

        jPanel7.setBackground(new java.awt.Color(106, 162, 186));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Nunito ExtraBold", 1, 24)); // NOI18N
        jLabel3.setText("Item Management");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 29));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 1106, 40));

        jPanel10.setBackground(new java.awt.Color(16, 52, 166));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(255, 0, 0)));
        jPanel5.add(jLabel12);

        jPanel10.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 0, 60, 30));

        jLabel19.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paint-brush.png"))); // NOI18N
        jLabel19.setText("MELO HARDWARE & PAINT HOUSE");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 3, 330, 25));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/heder_image-1.png"))); // NOI18N
        jPanel10.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 30));

        getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, -1));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jButton16.setBorderPainted(false);
        jButton16.setContentAreaFilled(false);
        jButton16.setFocusPainted(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 110));

        jButton17.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice_icon_mini.png"))); // NOI18N
        jButton17.setText("Invoice");
        jButton17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton17.setIconTextGap(30);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 240, 60));

        jButton20.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/po_icon_mini.png"))); // NOI18N
        jButton20.setText("P O");
        jButton20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton20.setIconTextGap(30);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 240, 60));

        jButton21.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_suplier_icon_mini.png"))); // NOI18N
        jButton21.setText("New Suplier");
        jButton21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton21.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton21.setIconTextGap(30);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 240, 60));

        jButton22.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_item_icon_mini.png"))); // NOI18N
        jButton22.setText("New Item");
        jButton22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton22.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton22.setIconTextGap(30);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 240, 60));

        jButton12.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_customer_mini.png"))); // NOI18N
        jButton12.setText("New Customer");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton12.setIconTextGap(30);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 240, 60));

        jButton13.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/report__icon_mini.png"))); // NOI18N
        jButton13.setText("Reports");
        jButton13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton13.setIconTextGap(30);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 240, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 261, 738));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        jPanel5.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited

    }//GEN-LAST:event_jPanel5MouseExited

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Home home = new Home();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        Invoice invoice = new Invoice();
        invoice.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        Po po = new Po();
        po.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        Suplier suplier = new Suplier();
        suplier.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        ItemRegistration item = new ItemRegistration();
        item.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Customer customer = new Customer();
        customer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Reports report = new Reports();
        report.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
        int selectedRow = jTable3.getSelectedRow();
        if (rad_stock.isSelected()) {
            if (!(txt_Oprice.getText().isEmpty() && txt_nPrice.getText().isEmpty())) {

                try {
                    String id = dtm.getValueAt(selectedRow, 0).toString();
                    String price = txt_nPrice.getText();
                    DB.iud("UPDATE stock SET selling_price = '" + price + "' WHERE stock_id = '" + id + "'");
                    JOptionPane.showMessageDialog(this, "Sucsussfully updated");

                    dtm.setValueAt(price, selectedRow, 4);
                    String expdate = dtm.getValueAt(selectedRow, 3).toString();
                    int rowCount = jTable3.getRowCount();
                    int count = 0;
                    while (rowCount > count) {

                        String p = dtm.getValueAt(count, 4).toString();

                        if (price.equals(p) && count != selectedRow) {

                            String p1 = dtm.getValueAt(count, 3).toString();
                            if (expdate.equals(p1)) {

                                int showConfirmDialog = JOptionPane.showConfirmDialog(this, "do you whant to combine thiese items");
                                if (JOptionPane.OK_OPTION == showConfirmDialog) {
                                    double qty1 = Double.parseDouble(dtm.getValueAt(selectedRow, 2).toString());
                                    double qty2 = Double.parseDouble(dtm.getValueAt(count, 2).toString());
                                    String id2 = (dtm.getValueAt(count, 0).toString());

                                    double tot = qty1 + qty2;

                                    DB.iud("UPDATE stock SET qty = '" + tot + "' WHERE stock_id = '" + id2 + "'");
                                    DB.iud("UPDATE stock SET status = 0 WHERE stock_id = '" + id + "'");
                                    dtm.setValueAt(tot, count, 2);
                                    dtm.removeRow(selectedRow);

                                    break;
                                }
                            }
                        }

                        count++;
                    }

                    txt_Oprice.setText(price);
                    txt_nPrice.setText(null);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        } else if (rad_item.isSelected()) {
            try {
                DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
                int row1 = jTable1.getSelectedRow();
                String id = dtm1.getValueAt(row1, 0).toString();
                String price = txt_nPrice.getText();
                DB.iud("UPDATE stock SET selling_price = '" + price + "' WHERE item_id = '" + id + "'");
                JOptionPane.showMessageDialog(this, "Sucsussfully updated");
                txt_Oprice.setText(price);
                dtm.setValueAt(price, selectedRow, 4);
                txt_nPrice.setText(null);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == 32 && jTable1.getSelectedRow() != -1) {

            try {

            } catch (Exception e) {
                JOptionPane.showConfirmDialog(this, "Invalid Option", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel dtm1 = (DefaultTableModel) jTable3.getModel();
        dtm1.setRowCount(0);

        int selectedRow = jTable1.getSelectedRow();

        String itemID = dtm.getValueAt(selectedRow, 0).toString();
        String name = dtm.getValueAt(selectedRow, 1).toString();

        try {
            ResultSet search = DB.search("SELECT stock_id, expdate, qty, selling_price FROM stock WHERE item_id = '" + itemID + "' AND status = '1'");
            while (search.next()) {
                Vector v = new Vector();
                v.add(search.getString("stock_id"));
                v.add(name);
                v.add(search.getString("qty"));
                v.add(search.getString("expdate"));
                v.add(search.getString("selling_price"));
                dtm1.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        String text = txt_search.getText();

        if (rad_name.isSelected()) {
            dtm.setRowCount(0);
            try {

                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id, stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.name LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else if (rad_sup.isSelected()) {
            dtm.setRowCount(0);
            try {
                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company,stock.stock_id, stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id WHERE suplier.company LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        } else if (rad_brand.isSelected()) {
            dtm.setRowCount(0);
            try {
                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id,stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.brand LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        } else if (rad_cat.isSelected()) {
            dtm.setRowCount(0);
            try {

                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id, stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.catagory LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        }       // TODO add your handling code here:       // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed

    }//GEN-LAST:event_txt_searchKeyPressed

    private void rad_brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_brandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_brandActionPerformed

    private void rad_supActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_supActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_supActionPerformed

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        // TODO add your handling code here:
        if (txt_search.getText().equals("Search")) {
            txt_search.setText("");
        }

    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusLost
        // TODO add your handling code here:
        if (txt_search.getCaretPosition() == 0) {
            txt_search.setText("Search");

        }
    }//GEN-LAST:event_txt_searchFocusLost

    private void rad_brand1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_brand1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_brand1ActionPerformed

    private void rad_sup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_sup1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_sup1ActionPerformed

    private void txt_search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search1KeyReleased
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();

        String text = txt_search1.getText();

        if (rad_name1.isSelected()) {
            dtm.setRowCount(0);
            try {

                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id,stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.name LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else if (rad_sup1.isSelected()) {
            dtm.setRowCount(0);
            try {
                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id,stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id WHERE suplier.company LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        } else if (rad_brand1.isSelected()) {
            dtm.setRowCount(0);
            try {
                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company,stock.stock_id, stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.brand LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        } else if (rad_cat1.isSelected()) {
            dtm.setRowCount(0);
            try {

                ResultSet search = DB.search("SELECT item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, stock.stock_id, stock.qty, stock.selling_price  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN stock ON stock.item_id = item.id  WHERE item.catagory LIKE '" + "%" + text + "%" + "'");

                while (search.next()) {
                    String id = search.getString("stock_id");
                    String name = search.getString("name");
                    String qty = search.getString("qty");
                    String price = search.getString("selling_price");
                    String brand = search.getString("brand");
                    String category = search.getString("catagory");
                    String m_unite = search.getString("mesure_unite");
                    String company = search.getString("company");

                    Vector v = new Vector();
                    v.add(id);
                    v.add(name);
                    v.add(qty + " " + m_unite);
                    v.add(price);
                    v.add(category);
                    v.add(company);
                    v.add(brand);

                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();

            }

        }       // TODO add your ha
    }//GEN-LAST:event_txt_search1KeyReleased

    private void txt_search1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_search1KeyPressed

    private void txt_search1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_search1FocusLost
        if (txt_search1.getCaretPosition() == 0) {
            txt_search1.setText("Search");
        }
    }//GEN-LAST:event_txt_search1FocusLost

    private void txt_search1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_search1FocusGained
        // TODO add your handling code here:
        if (txt_search1.getText().equals("Search")) {
            txt_search1.setText("");
        }
    }//GEN-LAST:event_txt_search1FocusGained

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2KeyPressed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        int row = jTable2.getSelectedRow();
        String item_id = dtm.getValueAt(row, 0).toString();
        if (row != -1) {
            loadTable4(item_id);
        }
        // methana

    }//GEN-LAST:event_jTable2MouseClicked

    private void btn_save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save1ActionPerformed

        if (!(MMP_unite.getText().isEmpty() && MMP_name.getText().isEmpty() && SMP_unite.getText().isEmpty() && SMP_name.getText().isEmpty() && sub_price_unite.getText().isEmpty() && Sub_price.getText().isEmpty())) {
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();

            int row = jTable2.getSelectedRow();
            if (btn_save1.getText().equals("Save")) {

                try {
                    String itemId = dtm.getValueAt(row, 0).toString();
                    String id = genarateSubId(itemId);

                    String subUnite = SMP_unite.getText();
                    String name = SMP_name.getText();
                    String price = Sub_price.getText();

                    DB.iud("INSERT INTO sub_item values('" + id + "','" + itemId + "','" + subUnite + "','" + name + "','" + price + "','" + SystemData.getSystemUser() + "')");
                    JOptionPane.showMessageDialog(this, "sucsussfull");

                    MMP_name.setText("");
                    MMP_unite.setText("");
                    SMP_name.setText("");
                    SMP_unite.setText("");
                    Sub_price.setText("");
                    sub_price_unite.setText("");

                    String item_id = dtm.getValueAt(row, 0).toString();
                    if (row != -1) {
                        loadTable4(item_id);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else if (btn_save1.getText().equals("Update")) {
                try {
                    DefaultTableModel dtm1 = (DefaultTableModel) jTable4.getModel();
                    int row1 = jTable4.getSelectedRow();
                    String id = dtm1.getValueAt(row1, 0).toString();

                    String subUnite = SMP_unite.getText();
                    String name = SMP_name.getText();
                    String price = Sub_price.getText();
                    DB.iud("UPDATE sub_item SET sub_unite = '" + subUnite + "', sub_unite_name  = '" + name + "', selling_Price  = '" + price + "' WHERE sub_id ='" + id + "'");
                    JOptionPane.showMessageDialog(this, "sucsussfull");

                    MMP_name.setText("");
                    MMP_unite.setText("");
                    SMP_name.setText("");
                    SMP_unite.setText("");
                    Sub_price.setText("");
                    sub_price_unite.setText("");
                    btn_save1.setText("Save");

                    String item_id = dtm.getValueAt(row, 0).toString();
                    if (row != -1) {
                        loadTable4(item_id);
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_btn_save1ActionPerformed

    private void sub_price_uniteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sub_price_uniteFocusGained
        // TODO add your handling code here:
        sub_price_unite.setText("1 - " + SMP_name.getText());
        Sub_price.grabFocus();
    }//GEN-LAST:event_sub_price_uniteFocusGained

    private void jTextField22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
        int selectedRow = jTable3.getSelectedRow();
        txt_Oprice.setText(dtm.getValueAt(selectedRow, 4).toString());
        txt_nPrice.grabFocus();


    }//GEN-LAST:event_jTable3MouseClicked

    private void MMP_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MMP_nameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MMP_nameActionPerformed

    private void SMP_uniteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMP_uniteActionPerformed
        // TODO add your handling code here:
        SMP_name.grabFocus();
    }//GEN-LAST:event_SMP_uniteActionPerformed

    private void SMP_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMP_nameActionPerformed
        // TODO add your handling code here:
        String val1 = SMP_name.getText();
        sub_price_unite.setText("1 - " + val1);
        Sub_price.grabFocus();
    }//GEN-LAST:event_SMP_nameActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable4.getModel();
        int row = jTable4.getSelectedRow();
        if (row > 0) {

            btn_save1.setText("Update");
            String id = dtm.getValueAt(row, 0).toString();
            try {
                ResultSet search = DB.search("SELECT sub_item.sub_unite, sub_item.sub_unite_name, sub_item.selling_Price, item.mesure_unite FROM sub_item INNER JOIN item ON sub_item.item_id = item.id  WHERE sub_item.sub_id = '" + id + "'");
                if (search.next()) {

                    String main_name = search.getString("mesure_unite");
                    String sub_name = search.getString("sub_unite_name");
                    String unit = search.getString("sub_unite");
                    String price = search.getString("selling_Price");

                    MMP_unite.setText("1");
                    MMP_name.setText(main_name);
                    SMP_unite.setText(unit);
                    SMP_name.setText(sub_name);
                    sub_price_unite.setText("1 - " + sub_name);
                    Sub_price.setText(price);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (btn_save1.getText().equals("Update")) {
            btn_save1.setText("Save");
            SMP_unite.setText("");
            SMP_name.setText("");
            sub_price_unite.setText("");
            Sub_price.setText("");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    private String genarateSubId(String id) {
        String subId = "";
        try {
            ResultSet dataFetch = DB.search("select count('sub_id') as x from sub_item where sub_id like '" + id + "-Sub" + "%" + "'");
            if (dataFetch.next()) {
                int count = Integer.parseInt(dataFetch.getString("x"));
                count++;
                subId = id + "-Sub" + count;

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return subId;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MMP_name;
    private javax.swing.JTextField MMP_unite;
    private javax.swing.JTextField SMP_name;
    private javax.swing.JTextField SMP_unite;
    private javax.swing.JTextField Sub_price;
    private javax.swing.JButton btn_save1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JRadioButton rad_brand;
    private javax.swing.JRadioButton rad_brand1;
    private javax.swing.JRadioButton rad_cat;
    private javax.swing.JRadioButton rad_cat1;
    private javax.swing.JRadioButton rad_item;
    private javax.swing.JRadioButton rad_name;
    private javax.swing.JRadioButton rad_name1;
    private javax.swing.JRadioButton rad_stock;
    private javax.swing.JRadioButton rad_sup;
    private javax.swing.JRadioButton rad_sup1;
    private javax.swing.JTextField sub_price_unite;
    private javax.swing.JTextField txt_Oprice;
    private javax.swing.JTextField txt_nPrice;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_search1;
    // End of variables declaration//GEN-END:variables
private void loadTable4(String item_id) {
        try {

            DefaultTableModel dtm1 = (DefaultTableModel) jTable4.getModel();
            dtm1.setRowCount(0);
            ResultSet search0 = DB.search("SELECT item.name, item.mesure_unite, stock.selling_price  FROM  item  INNER JOIN stock ON item.id = stock.item_id WHERE item.id = '" + item_id + "' ");
            if (search0.next()) {
                String mName = search0.getString("name");
                String mUnite = search0.getString("mesure_unite");
                String mPrice = search0.getString("selling_price");

                Vector v = new Vector();
                v.add("Main Unit");
                v.add(mName);
                v.add(mUnite);
                v.add("1 " + mUnite + "  =  1 " + mUnite);
                v.add("1 " + mUnite + " = Rs " + mPrice);
                dtm1.addRow(v);

                MMP_unite.setText("1");
                MMP_name.setText(mUnite);
                SMP_unite.grabFocus();

                ResultSet search = DB.search("SELECT item.name, item.mesure_unite, sub_item.sub_id, sub_item.sub_unite, sub_item.sub_unite_name, sub_item.selling_Price FROM  sub_item  INNER JOIN item ON item.id = sub_item.item_id WHERE item.id = '" + item_id + "' ");
                while (search.next()) {
                    String id = search.getString("sub_id");
                    String name = search.getString("name");
                    String mp = search.getString("sub_unite_name");
                    String unit = search.getString("sub_unite");
                    String Price = search.getString("selling_Price");

                    Vector v1 = new Vector();
                    v1.add(id);
                    v1.add(name);

                    v1.add(mp);
                    v1.add("1 " + mUnite + "  =  " + unit + " " + mp);
                    v1.add("1 " + mp + " = Rs " + Price);

                    dtm1.addRow(v1);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadTable() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();

        try {

            ResultSet search = DB.search("SELECT item.id, item.name, item.brand, item.catagory, item.mesure_unite , suplier.company, quntity.qty  FROM item INNER JOIN suplier ON item.suplier = suplier.id INNER JOIN quntity ON quntity.item_id = item.id  ");

            while (search.next()) {
                String id = search.getString("id");
                String name = search.getString("name");
                String qty = search.getString("qty");

                String brand = search.getString("brand");
                String category = search.getString("catagory");
                String m_unite = search.getString("mesure_unite");
                String company = search.getString("company");

                Vector v = new Vector();
                v.add(id);
                v.add(name);
                v.add(qty + " " + m_unite);

                v.add(category);
                v.add(company);
                v.add(brand);

                dtm.addRow(v);
                dtm2.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
