/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Common.SystemData;
import Common.TabData;
import DB.DB;
import java.awt.Color;
import java.awt.Component;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Chrishmal Rodrigo
 */
public class Invoice extends javax.swing.JFrame {

    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        genarateInvoiceId();
        jScrollPane3.setVisible(false);
        jList3.setCellRenderer(getRenderer());
        DefaultListCellRenderer renderer = (DefaultListCellRenderer) jList3.getCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        lbl_add_cus.setVisible(false);

        dlm.addElement(button_number + "");
        button_number++;
        jList3.setModel(dlm);
        jList3.setSelectedIndex(button_number - 2);
        Common.SystemLogger.initLogger(Customer.class).info("Invoice interface sign");


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel8 = new javax.swing.JPanel();
        jList3 = new javax.swing.JList<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        lbl_invoiceid = new javax.swing.JLabel();
        txt_customer = new javax.swing.JTextField();
        txt_dis = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_customerName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_dPrice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_qty = new javax.swing.JTextField();
        txt_subtot = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txt_inv_nettot = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_inv_payment = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_inv_balance = new javax.swing.JTextField();
        txt_inv_dis = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_inv_subtot = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        txt_customerName1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lbl_add_cus = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rad_show = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        jScrollPane4.setViewportView(jList2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 310, -1));

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jList3.setAutoscrolls(false);
        jList3.setFixedCellHeight(50);
        jList3.setFixedCellWidth(36);
        jList3.setPreferredSize(new java.awt.Dimension(36, 0));
        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList3MousePressed(evt);
            }
        });
        jPanel8.add(jList3);

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 80, 36, 540));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));

        jLabel20.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel20.setText("Invoice ID :-");

        lbl_invoiceid.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_invoiceid, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(948, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_invoiceid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1106, 30));

        txt_customer.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        txt_customer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_customerFocusGained(evt);
            }
        });
        txt_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_customerActionPerformed(evt);
            }
        });
        jPanel2.add(txt_customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 140, 30));

        txt_dis.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        txt_dis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_disFocusLost(evt);
            }
        });
        txt_dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_disActionPerformed(evt);
            }
        });
        txt_dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_disKeyPressed(evt);
            }
        });
        jPanel2.add(txt_dis, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 110, 30));

        jTable1.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item Name", "Selling price", "Expiry", "On Hand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 1030, 110));

        txt_customerName.setEditable(false);
        txt_customerName.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        jPanel2.add(txt_customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 140, 30));

        jLabel1.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Discount");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 110, -1));

        txt_dPrice.setEditable(false);
        txt_dPrice.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        jPanel2.add(txt_dPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 110, 30));

        jLabel2.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Discounted Price");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, 110, -1));

        jLabel4.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        jLabel4.setToolTipText("Add Mesure Unit");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 240, 40, -1));

        txt_qty.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        txt_qty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_qtyFocusLost(evt);
            }
        });
        txt_qty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_qtyMouseClicked(evt);
            }
        });
        txt_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qtyActionPerformed(evt);
            }
        });
        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_qtyKeyPressed(evt);
            }
        });
        jPanel2.add(txt_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 110, 30));

        txt_subtot.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        txt_subtot.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_subtotFocusGained(evt);
            }
        });
        txt_subtot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_subtotActionPerformed(evt);
            }
        });
        txt_subtot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_subtotKeyPressed(evt);
            }
        });
        jPanel2.add(txt_subtot, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 240, 110, 30));

        jLabel5.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sub Total");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 220, 110, -1));

        jTable2.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Count", "ID", "Item Name", "Unite", "Qty", "Unit Price ", "D.Price ", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 910, 200));

        txt_inv_nettot.setEditable(false);
        txt_inv_nettot.setFont(new java.awt.Font("Nunito Black", 0, 19)); // NOI18N
        txt_inv_nettot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_inv_nettotKeyPressed(evt);
            }
        });
        jPanel2.add(txt_inv_nettot, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 550, 120, 30));

        jLabel7.setFont(new java.awt.Font("Nunito ExtraBold", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Net Total");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, 120, 20));

        jLabel9.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Payment");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 530, 120, 20));

        txt_inv_payment.setFont(new java.awt.Font("Nunito", 1, 14)); // NOI18N
        txt_inv_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_inv_paymentActionPerformed(evt);
            }
        });
        txt_inv_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_inv_paymentKeyPressed(evt);
            }
        });
        jPanel2.add(txt_inv_payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 550, 120, 30));

        jLabel10.setFont(new java.awt.Font("Nunito ExtraBold", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Balance");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, 120, 20));

        txt_inv_balance.setEditable(false);
        txt_inv_balance.setFont(new java.awt.Font("Nunito Black", 0, 19)); // NOI18N
        txt_inv_balance.setForeground(new java.awt.Color(255, 0, 0));
        txt_inv_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_inv_balanceActionPerformed(evt);
            }
        });
        txt_inv_balance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_inv_balanceKeyPressed(evt);
            }
        });
        jPanel2.add(txt_inv_balance, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 550, 120, 30));

        txt_inv_dis.setFont(new java.awt.Font("Nunito", 1, 14)); // NOI18N
        txt_inv_dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_inv_disActionPerformed(evt);
            }
        });
        txt_inv_dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_inv_disKeyPressed(evt);
            }
        });
        jPanel2.add(txt_inv_dis, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, 120, 30));

        jLabel11.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Dicount");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, 120, 20));

        txt_inv_subtot.setEditable(false);
        txt_inv_subtot.setFont(new java.awt.Font("Nunito Black", 0, 19)); // NOI18N
        txt_inv_subtot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_inv_subtotKeyPressed(evt);
            }
        });
        jPanel2.add(txt_inv_subtot, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 120, 30));

        jLabel8.setFont(new java.awt.Font("Nunito ExtraBold", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Sub Total");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 120, 20));

        jButton1.setFont(new java.awt.Font("Nunito", 1, 13)); // NOI18N
        jButton1.setText("Remove all");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 450, 100, 30));

        jButton2.setFont(new java.awt.Font("Nunito", 1, 13)); // NOI18N
        jButton2.setText("Edite");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 310, 100, 30));

        jButton6.setFont(new java.awt.Font("Nunito", 1, 13)); // NOI18N
        jButton6.setText("Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 380, 100, 30));

        txt_search.setFont(new java.awt.Font("Nunito", 0, 14)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });
        jPanel2.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 310, 30));

        txt_customerName1.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        txt_customerName1.setEnabled(false);
        txt_customerName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_customerName1KeyPressed(evt);
            }
        });
        jPanel2.add(txt_customerName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 50, 140, 30));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Barcode");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 30, 140, 20));

        txt_id.setEditable(false);
        txt_id.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        jPanel2.add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 110, 30));

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 30, 36, 50));

        jComboBox1.setFont(new java.awt.Font("Nunito", 0, 13)); // NOI18N
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox1PropertyChange(evt);
            }
        });
        jComboBox1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jComboBox1VetoableChange(evt);
            }
        });
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, 110, 30));

        jLabel14.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Qty");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 110, -1));

        jLabel17.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("ID");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 110, -1));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Mobile");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 140, 20));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Customer Name");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 140, 20));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying-glass.png"))); // NOI18N
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 30, 30));

        lbl_add_cus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-contact.png"))); // NOI18N
        lbl_add_cus.setToolTipText("Add New Customer");
        lbl_add_cus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_add_cusMouseClicked(evt);
            }
        });
        jPanel2.add(lbl_add_cus, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 30, 30));

        jLabel6.setFont(new java.awt.Font("Nunito", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Unit");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 110, -1));

        rad_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rad_showMouseReleased(evt);
            }
        });
        rad_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_showActionPerformed(evt);
            }
        });
        jPanel2.add(rad_show, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 590, -1, -1));

        jLayeredPane2.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 1106, 620));

        jPanel4.setBackground(java.awt.Color.white);
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 210, 50));

        jButton4.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 210, 50));

        jButton5.setFont(new java.awt.Font("Nunito", 0, 18)); // NOI18N
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 210, 50));

        jLayeredPane2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 689, 1106, 79));

        jPanel10.setBackground(new java.awt.Color(16, 52, 166));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(255, 0, 0)));
        jPanel5.add(jLabel12);

        jPanel10.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 0, 60, 30));

        jLabel15.setFont(new java.awt.Font("Nunito", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paint-brush.png"))); // NOI18N
        jLabel15.setText("MELO HARDWARE & PAINT HOUSE");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 3, 330, 25));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/heder_image-1.png"))); // NOI18N
        jPanel10.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 30));

        jLayeredPane2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, -1));

        jPanel7.setBackground(new java.awt.Color(106, 162, 186));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Nunito ExtraBold", 1, 24)); // NOI18N
        jLabel3.setText("Invoice");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 29));

        jLayeredPane2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 1106, 40));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jButton16.setBorderPainted(false);
        jButton16.setContentAreaFilled(false);
        jButton16.setFocusPainted(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 110));

        jButton17.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice_icon_mini.png"))); // NOI18N
        jButton17.setText("Invoice");
        jButton17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton17.setIconTextGap(30);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 240, 60));

        jButton20.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/po_icon_mini.png"))); // NOI18N
        jButton20.setText("P O");
        jButton20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton20.setIconTextGap(30);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 240, 60));

        jButton21.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_suplier_icon_mini.png"))); // NOI18N
        jButton21.setText("New Supplier");
        jButton21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton21.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton21.setIconTextGap(30);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 240, 60));

        jButton22.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_item_icon_mini.png"))); // NOI18N
        jButton22.setText("New Item");
        jButton22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton22.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton22.setIconTextGap(30);
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 240, 60));

        jButton12.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new_customer_mini.png"))); // NOI18N
        jButton12.setText("New Customer");
        jButton12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton12.setIconTextGap(30);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 240, 60));

        jButton13.setFont(new java.awt.Font("Nunito", 1, 18)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/report__icon_mini.png"))); // NOI18N
        jButton13.setText("Reports");
        jButton13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton13.setIconTextGap(30);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 240, 60));

        jLayeredPane2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 261, 738));

        getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
if(!txt_inv_subtot.getText().isEmpty()){
        try {
            String invoice = genarateInvoiceId();
            String costomer = txt_customer.getText();
            String costomerName = txt_customerName.getText();
            if (costomer.isEmpty() || costomerName.equals("invalid number")) {
                costomer = "Mobile";
            }

            if (costomer.startsWith("0")) {
                costomer = costomer.substring(1, costomer.length());
            }
            String total = txt_inv_subtot.getText();
            String discount = txt_inv_dis.getText();
            String nettotal = txt_inv_nettot.getText();
            String payment = txt_inv_payment.getText();
            String balance = txt_inv_balance.getText();
            String is_subunite = "no";

            DB.iud("INSERT INTO invoice VALUES('" + invoice + "','" + costomer + "','" + total + "','" + discount + "','" + nettotal + "','" + payment + "','" + balance + "',now(),'" + SystemData.getSystemUser() + "',CURRENT_TIMESTAMP ) ");
            int count = jTable2.getRowCount();
            DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            while (count >= 1) {
                String stock_id = dtm2.getValueAt(0, 1).toString();
                String unite = dtm2.getValueAt(0, 3).toString();
                double qty = Double.parseDouble(dtm2.getValueAt(0, 4).toString());
                double uprice = Double.parseDouble(dtm2.getValueAt(0, 5).toString());
                double dprice = Double.parseDouble(dtm2.getValueAt(0, 6).toString());

                double itm_total = Double.parseDouble(dtm2.getValueAt(0, 7).toString());
                String unite_no = unite.substring(unite.length() - 2, unite.length() - 1);
                unite = unite.substring(0, unite.length() - 3);
                if (unite_no != "0") {
                    ResultSet search = DB.search("SELECT sub_unite, sub_id FROM sub_item WHERE sub_unite_name = '" + unite + "'");
                    if (search.next()) {

                        double x = search.getDouble("sub_unite");

                        is_subunite = search.getString("sub_id");

                        qty = qty / x;
                    }
                }

                String itm_id[] = stock_id.split("-");
                double itm_discount = uprice - dprice;
                DB.iud("UPDATE stock SET qty = qty - '" + qty + "' WHERE stock_id = '" + stock_id + "' ");

                DB.iud("UPDATE quntity SET qty = qty - '" + qty + "' WHERE item_id = '" + itm_id[0] + "' ");

                DB.iud("INSERT INTO invoice_details VALUES('" + invoice + "', '" + stock_id + "', '" + itm_discount + "','" + qty + "','" + unite + "', '" + itm_total + "', '" + is_subunite + "' )");

                ResultSet w = DB.search("SELECT waranty FROM item WHERE id = '" + itm_id[0] + "' ");
                if (w.next()) {
                    boolean waranty = w.getBoolean("waranty");
                    if (waranty) {
                        warantyCardNo(itm_id[0], invoice);
                    }

                }

                count--;
                dtm2.removeRow(0);

            }
            JOptionPane.showMessageDialog(this, "Successful!", "Succsuss", JOptionPane.INFORMATION_MESSAGE);

            subtotal = 0.0;

            txt_id.setText(null);
            txt_dis.setText(null);
            txt_dPrice.setText(null);
            txt_qty.setText(null);
            txt_subtot.setText(null);

            dtm2.setRowCount(0);
            dtm.setRowCount(0);
            txt_customer.setText(null);
            txt_customerName.setText(null);
            txt_search.setText(null);

            txt_inv_balance.setText(null);
            txt_inv_payment.setText(null);
            txt_inv_nettot.setText(null);
            txt_inv_dis.setText(null);
            txt_inv_subtot.setText(null);
            txt_customer.grabFocus();
            System.out.println(invoice + " " + Common.SystemData.getName());
            billPrint(invoice, Common.SystemData.getName());
            genarateInvoiceId();

        } catch (Exception e) {
            e.printStackTrace();
        }
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txt_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_customerActionPerformed
        if (!txt_customer.getText().isEmpty()) {
            String mobile = txt_customer.getText();
            if (mobile.startsWith("0")) {
                mobile = mobile.substring(1, mobile.length());
            }

            try {
                ResultSet search = DB.search("SELECT fname, lname FROM customer WHERE mobile = '" + mobile + "' ");
                if (search.next()) {
                    String customer_name = search.getString("fname") + " " + search.getString("lname");
                    txt_customer.setForeground(Color.black);
                    txt_customerName.setText(customer_name);
                    txt_search.grabFocus();
                    lbl_add_cus.setVisible(false);
                } else {
                    txt_customer.setForeground(Color.red);
                    txt_customerName.setText("invalid number");
                    txt_search.grabFocus();
                    lbl_add_cus.setVisible(true);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_customerActionPerformed

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        try {
            String text = txt_search.getText();
            ResultSet set2 = DB.search("SELECT id, name FROM item WHERE name LIKE '" + "%" + text + "%" + "' ");
            Vector v = new Vector();
            jScrollPane3.setVisible(false);

            while (set2.next()) {

                jScrollPane3.setVisible(true);
                String id = set2.getString("id");
                String name = set2.getString("name");

                String showname = name + "  -  " + id;
                v.add(showname);
                jList1.setListData(v);

            }
            if (txt_search.getText().isEmpty()) {
                jScrollPane3.setVisible(false);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_searchKeyReleased

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (!jList1.isSelectionEmpty()) {
            String value = jList1.getSelectedValue();
            String[] itmName = jList1.getSelectedValue().split("  -  ");

            txt_search.setText(value);
            String item = itmName[1];
            jScrollPane3.setVisible(false);

            try {
                ResultSet search = DB.search("SELECT stock_id,selling_price,expdate,qty FROM stock WHERE item_id = '" + item + "' AND status = 1 ");

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

                dtm.setRowCount(0);
                while (search.next()) {

                    Vector v = new Vector();
                    v.add(search.getString("stock_id"));
                    v.add(itmName[0]);
                    v.add(jComboBox1.getSelectedItem().toString() + "(" + jComboBox1.getSelectedIndex() + ")");
                    v.add(search.getString("selling_price"));
                    v.add(search.getString("expdate"));

                    availableQty = Double.parseDouble(search.getString("qty"));
                    v.add(availableQty);

                    dtm.addRow(v);
                    jTable1.grabFocus();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        txt_id.setText(dtm.getValueAt(row, 0).toString());
        txt_dis.grabFocus();


    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_disActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_disActionPerformed
        if (!txt_id.getText().isEmpty()) {
            String txtDiscount = txt_dis.getText();

            if (txtDiscount.isEmpty()) {
                txt_dis.setText("0");
            }
            if (txtDiscount.matches("\\d*")) {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                int row = jTable1.getSelectedRow();
                double price = Double.parseDouble(dtm.getValueAt(row, 2).toString());
                double discount = Double.parseDouble(txt_dis.getText());
                double disPrice = price - discount;
                txt_dPrice.setText(disPrice + "");
                txt_qty.grabFocus();
            } else {
                txt_dis.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select an Item", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txt_disActionPerformed

    private void txt_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qtyActionPerformed
        if (!txt_id.getText().isEmpty()) {
            String txtqty = txt_qty.getText();
            if (txtqty.isEmpty()) {
                txt_qty.setText("1");
            }
           
                String unite = jComboBox1.getSelectedItem().toString();
                int unite_no = jComboBox1.getSelectedIndex();

                double price = Double.parseDouble(txt_dPrice.getText());
                double qty = Double.parseDouble(txt_qty.getText());
                double total = price * qty;
                txt_subtot.setText(total + "");
                txt_subtot.grabFocus();

            
        } else {
            JOptionPane.showMessageDialog(this, "Please Select an Item", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txt_qtyActionPerformed

    private void txt_subtotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_subtotActionPerformed
        if (!txt_id.getText().isEmpty()) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int row = jTable1.getSelectedRow();
            DefaultTableModel dtm1 = (DefaultTableModel) jTable2.getModel();
            int rowCount = jTable2.getRowCount();
            rowCount++;
            Vector v = new Vector();
            v.add(rowCount);
            v.add(txt_id.getText());
            v.add(dtm.getValueAt(row, 1));
            v.add(jComboBox1.getSelectedItem().toString() + "(" + jComboBox1.getSelectedIndex() + ")");
            v.add(txt_qty.getText());

            if (uniteIndex == 0) {
                v.add(dtm.getValueAt(row, 2));
            } else {
                v.add(unitPrice);
            }

            v.add(txt_dPrice.getText());
            double total = Double.parseDouble(txt_subtot.getText());
            v.add(total);
            dtm1.addRow(v);
            subtotal = subtotal + total;
            txt_inv_subtot.setText(subtotal + "");
            txt_search.setText(null);

            txt_search.grabFocus();

            txt_id.setText(null);
            txt_dis.setText(null);
            txt_dPrice.setText(null);
            txt_qty.setText(null);
            txt_subtot.setText(null);
            jComboBox1.removeAllItems();
            unitPrice = 0.0;
            uniteIndex = 0;
            availableQty = 0.0;
        } else {
            JOptionPane.showMessageDialog(this, "Please Select an Item", "Error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txt_subtotActionPerformed

    private void txt_subtotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_subtotKeyPressed

        if (evt.getKeyCode() == 32) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

            int row = jTable1.getSelectedRow();
            DefaultTableModel dtm1 = (DefaultTableModel) jTable2.getModel();
            int rowCount = jTable2.getRowCount();
            rowCount++;
            Vector v = new Vector();
            v.add(rowCount);
            v.add(txt_id.getText());
            v.add(dtm.getValueAt(row, 1));
            v.add(dtm.getValueAt(row, 2));
            v.add(txt_dPrice.getText());
            v.add(txt_qty.getText());
            double total = Double.parseDouble(txt_subtot.getText());
            v.add(total);
            dtm1.addRow(v);
            subtotal = subtotal + total;
            txt_inv_subtot.setText(subtotal + "");
            txt_search.setText(null);

            txt_inv_dis.grabFocus();

            txt_id.setText(null);
            txt_dis.setText(null);
            txt_dPrice.setText(null);
            txt_qty.setText(null);
            txt_subtot.setText(null);
        }

    }//GEN-LAST:event_txt_subtotKeyPressed

    private void txt_inv_disActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_inv_disActionPerformed
        if(!txt_inv_subtot.getText().isEmpty()){
        if (txt_inv_dis.getText().isEmpty()) {
            txt_inv_dis.setText("0");
        }
        
        
        double discount = Double.parseDouble(txt_inv_dis.getText());
        if(discount < subtotal){
        double nettot = subtotal - discount;
        txt_inv_nettot.setText(nettot + "");
        txt_inv_payment.grabFocus();
        }else{
        txt_inv_dis.setText("");
        }
        }
    }//GEN-LAST:event_txt_inv_disActionPerformed

    private void txt_inv_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_inv_paymentActionPerformed
       
        
        double payment = Double.parseDouble(txt_inv_payment.getText());
        double nettot = Double.parseDouble(txt_inv_nettot.getText());
        if(nettot < payment){
        double balance = payment - nettot;
        txt_inv_balance.setText(balance + "");
        txt_inv_balance.grabFocus();
        }else{
        txt_inv_payment.setText("");
        }
    }//GEN-LAST:event_txt_inv_paymentActionPerformed

    private void txt_inv_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_inv_balanceActionPerformed
        try {
            String invoice = genarateInvoiceId();
            String costomer = txt_customer.getText();
            String costomerName = txt_customerName.getText();
            if (costomer.isEmpty() || costomerName.equals("invalid number")) {
                costomer = "Mobile";
            }

            if (costomer.startsWith("0")) {
                costomer = costomer.substring(1, costomer.length());
            }
            String total = txt_inv_subtot.getText();
            String discount = txt_inv_dis.getText();
            String nettotal = txt_inv_nettot.getText();
            String payment = txt_inv_payment.getText();
            String balance = txt_inv_balance.getText();
            String is_subunite = "no";

            DB.iud("INSERT INTO invoice VALUES('" + invoice + "','" + costomer + "','" + total + "','" + discount + "','" + nettotal + "','" + payment + "','" + balance + "',now(),'" + SystemData.getSystemUser() + "',CURRENT_TIMESTAMP ) ");
            int count = jTable2.getRowCount();
            DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            while (count >= 1) {
                String stock_id = dtm2.getValueAt(0, 1).toString();
                String unite = dtm2.getValueAt(0, 3).toString();
                double qty = Double.parseDouble(dtm2.getValueAt(0, 4).toString());
                double uprice = Double.parseDouble(dtm2.getValueAt(0, 5).toString());
                double dprice = Double.parseDouble(dtm2.getValueAt(0, 6).toString());

                double itm_total = Double.parseDouble(dtm2.getValueAt(0, 7).toString());
                String unite_no = unite.substring(unite.length() - 2, unite.length() - 1);
                unite = unite.substring(0, unite.length() - 3);
                if (unite_no != "0") {
                    ResultSet search = DB.search("SELECT sub_unite, sub_id FROM sub_item WHERE sub_unite_name = '" + unite + "'");
                    if (search.next()) {

                        double x = search.getDouble("sub_unite");

                        is_subunite = search.getString("sub_id");

                        qty = qty / x;
                    }
                }

                String itm_id[] = stock_id.split("-");
                double itm_discount = uprice - dprice;
                DB.iud("UPDATE stock SET qty = qty - '" + qty + "' WHERE stock_id = '" + stock_id + "' ");

                DB.iud("UPDATE quntity SET qty = qty - '" + qty + "' WHERE item_id = '" + itm_id[0] + "' ");

                DB.iud("INSERT INTO invoice_details VALUES('" + invoice + "', '" + stock_id + "', '" + itm_discount + "','" + qty + "','" + unite + "', '" + itm_total + "', '" + is_subunite + "' )");

                ResultSet w = DB.search("SELECT waranty FROM item WHERE id = '" + itm_id[0] + "' ");
                if (w.next()) {
                    boolean waranty = w.getBoolean("waranty");
                    if (waranty) {
                        warantyCardNo(itm_id[0], invoice);
                    }

                }

                count--;
                dtm2.removeRow(0);

            }
            JOptionPane.showMessageDialog(this, "Successful!", "Succsuss", JOptionPane.INFORMATION_MESSAGE);

            subtotal = 0.0;

            txt_id.setText(null);
            txt_dis.setText(null);
            txt_dPrice.setText(null);
            txt_qty.setText(null);
            txt_subtot.setText(null);

            dtm2.setRowCount(0);
            dtm.setRowCount(0);
            txt_customer.setText(null);
            txt_customerName.setText(null);
            txt_search.setText(null);

            txt_inv_balance.setText(null);
            txt_inv_payment.setText(null);
            txt_inv_nettot.setText(null);
            txt_inv_dis.setText(null);
            txt_inv_subtot.setText(null);
            txt_customer.grabFocus();
            System.out.println(invoice + " " + Common.SystemData.getName());
            billPrint(invoice, Common.SystemData.getName());
            genarateInvoiceId();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_inv_balanceActionPerformed

    private void txt_searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyPressed
        if (jList1.isVisible()) {

            if (evt.getKeyCode() == 40) {
                jList1.grabFocus();
                jList1.setSelectedIndex(0);
            }
        }
        if (jTable2.getRowCount() >= 1 && txt_search.getText().isEmpty()) {

            if (evt.getKeyCode() == 40) {

                txt_inv_dis.grabFocus();

            }
        }


    }//GEN-LAST:event_txt_searchKeyPressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == 10) {
            if (!jList1.isSelectionEmpty()) {
                String value = jList1.getSelectedValue();
                String[] itmName = jList1.getSelectedValue().split("  -  ");

                txt_search.setText(value);
                String item = itmName[1];
                jScrollPane3.setVisible(false);

                try {
                    ResultSet search = DB.search("SELECT stock_id,selling_price,expdate,qty,waranty FROM stock WHERE item_id = '" + item + "' AND status = 1 ");

                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    DecimalFormat df = new DecimalFormat("0.00");

                    dtm.setRowCount(0);
                    while (search.next()) {

                        Vector v = new Vector();

                        v.add(search.getString("stock_id"));
                        v.add(itmName[0]);
                        v.add(search.getString("selling_price"));
                        v.add(search.getString("expdate"));
                        String qty = df.format(search.getDouble("qty"));
                        availableQty = Double.parseDouble(qty);

                        v.add(qty);
                        dtm.addRow(v);
                        jTable1.grabFocus();
                        jTable1.setRowSelectionInterval(0, 0);

                        if (jTable1.getRowCount() < 2) {
                            int row = jTable1.getSelectedRow();
                            String itm_id = dtm.getValueAt(row, 0).toString();
                            txt_id.setText(itm_id);
                            txt_id.setEditable(false);
                            String id[] = itm_id.split("-");
                            txt_dis.grabFocus();

                            ResultSet search1 = DB.search("SELECT mesure_unite FROM item WHERE id = '" + id[0] + "'");
                            ResultSet search2 = DB.search("SELECT sub_unite_name FROM sub_item WHERE item_id = '" + id[0] + "'");

                            if (search1.next()) {
                                jComboBox1.removeAllItems();
                                jComboBox1.addItem(search1.getString("mesure_unite"));
                                while (search2.next()) {
                                    jComboBox1.addItem(search2.getString("sub_unite_name"));

                                }
                            }
                        }

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == 32) {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

            int row = jTable1.getSelectedRow();
            txt_id.setText(dtm.getValueAt(row, 0).toString());
            txt_id.setVisible(false);
            txt_dis.grabFocus();

        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void txt_customerName1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_customerName1KeyPressed
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_txt_customerName1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow > -1) {
            try {
                int showInputDialog = Integer.parseInt(JOptionPane.showInputDialog(this, "enter new quntity"));
                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                dtm.setValueAt(showInputDialog, selectedRow, 5);
                double dprice = Double.parseDouble(dtm.getValueAt(selectedRow, 4).toString());
                dtm.setValueAt((dprice * showInputDialog), selectedRow, 6);

                subtotal = subtotal + (dprice * showInputDialog);
                subtotal();
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(this, "Invalid Input", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showConfirmDialog(this, "Not Selected row", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked

        if (button_number < 7) {
            dlm.addElement(button_number + "");
            jList3.setModel(dlm);
            jList3.setSelectedIndex(button_number - 1);
            saveData();
            genarateInvoiceId();
            oldIndex = button_number - 1;
            button_number++;
        }
        resetData();
        txt_customer.grabFocus();

    }//GEN-LAST:event_jPanel9MouseClicked

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked

        int value = Integer.parseInt(jList3.getSelectedValue());
        if (value == 1 | value == 2 | value == 3 | value == 4 | value == 5 | value == 6) {
            int index = value - 1;
            if (oldIndex != index) {

                saveData();
                resetData();
                dataRecall(index);
                oldIndex = index;
            }
        }
    }//GEN-LAST:event_jList3MouseClicked

    private void jList3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jList3MousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (button_number > 2) {
            int selectedIndex = jList3.getSelectedIndex();
            TabData.deletetab(selectedIndex);
            System.out.println(button_number);
            ((DefaultListModel) jList3.getModel()).remove(button_number - 2);
            jList3.setSelectedIndex(0);
            button_number--;
            int index = 0;
            DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
            DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();

            dtm1.setRowCount(0);
            dtm2.setRowCount(0);

            txt_customer.setText(TabData.getCus_num(index));
            txt_customerName.setText(TabData.getCus_name(index));

            Vector b = new Vector();

            b.add(TabData.getT1_id(index));

            b.add(TabData.getT1_itemName(index));
            b.add(TabData.getT1_sprice(index));
            b.add(TabData.getT1_exp(index));
            b.add(TabData.getT1_onHand(index));
            if (b.firstElement() != null) {
                dtm1.addRow(b);
                jTable1.setRowSelectionInterval(0, 0);
            }
            txt_id.setText(TabData.getTxt_id(index));
            txt_dis.setText(TabData.getTxt_discount(index));
            txt_dPrice.setText(TabData.getTxt_dprice(index));
            txt_qty.setText(TabData.getTxt_qty(index));
            txt_subtot.setText(TabData.getTxt_subtotal(index));

            Vector b1 = (Vector) TabData.getT2_count(index);
            Vector b2 = (Vector) TabData.getT2_id(index);
            Vector b3 = (Vector) TabData.getT2_ItemName(index);
            Vector b4 = (Vector) TabData.getT2_uPrice(index);
            Vector b5 = (Vector) TabData.getT2_dprice(index);
            Vector b6 = (Vector) TabData.getT2_qty(index);
            Vector b7 = (Vector) TabData.getT2_tot(index);

            int rowcount = 0;
            while (b1.size() > rowcount) {

                Vector rowmaker = new Vector();
                rowmaker.add(b1.elementAt(rowcount));
                rowmaker.add(b2.elementAt(rowcount));
                rowmaker.add(b3.elementAt(rowcount));
                rowmaker.add(b4.elementAt(rowcount));
                rowmaker.add(b5.elementAt(rowcount));
                rowmaker.add(b6.elementAt(rowcount));
                rowmaker.add(b7.elementAt(rowcount));
                rowcount++;
                dtm2.addRow(rowmaker);

            }

            txt_inv_subtot.setText(TabData.getSubtot(index));
            txt_inv_dis.setText(TabData.getDiscout(index));
            txt_inv_nettot.setText(TabData.getNettot(index));
            txt_inv_payment.setText(TabData.getPayment(index));
            txt_inv_balance.setText(TabData.getBalance(index));

            oldIndex = index;

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow > -1) {

            ((DefaultTableModel) jTable2.getModel()).removeRow(selectedRow);
            subtotal();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        subtotal = 0.0;
        txt_inv_subtot.setText(subtotal + "");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_subtotFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_subtotFocusGained
        if (jComboBox1.getSelectedIndex() > 0) {

        }
    }//GEN-LAST:event_txt_subtotFocusGained

    private void jComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox1PropertyChange

    }//GEN-LAST:event_jComboBox1PropertyChange

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if (!txt_dis.getText().isEmpty()) {

            int unite_no = jComboBox1.getSelectedIndex();
            String unite = jComboBox1.getSelectedItem().toString();

            if (unite_no == 0) {

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

                int row = jTable1.getSelectedRow();
                double price = Double.parseDouble(dtm.getValueAt(row, 2).toString());
                double discount = Double.parseDouble(txt_dis.getText());
                double disPrice = price - discount;
                txt_dPrice.setText(disPrice + "");

            } else {

                uniteIndex = unite_no;
                try {
                    if (!unite.equals(null)) {
                        ResultSet search = DB.search("SELECT selling_Price,sub_unite FROM sub_item WHERE sub_unite_name = '" + unite + "'");
                        if (search.next()) {
                            double price = search.getDouble("selling_Price");
                            double sub_unite = search.getDouble("sub_unite");
                            System.out.println("sub_unite --" + sub_unite);

                            unitPrice = price;
                            int discount = Integer.parseInt(txt_dis.getText());
                            txt_dPrice.setText((price - discount) + "");
                            txt_subtot.setText("");

                        }
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            txt_qty.grabFocus();
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jComboBox1VetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1VetoableChange

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost


    }//GEN-LAST:event_jComboBox1FocusLost

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        jPanel5.setBackground(new Color(0.0f, 0.0f, 0.0f, 0.0f));
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited

    }//GEN-LAST:event_jPanel5MouseExited

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Home home = new Home();
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        Invoice invoice = new Invoice();
        invoice.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        Po po = new Po();
        po.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        Suplier suplier = new Suplier();
        suplier.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        ItemRegistration item = new ItemRegistration();
        item.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Customer customer = new Customer();
        customer.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Reports report = new Reports();
        report.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void lbl_add_cusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_add_cusMouseClicked
        int id = Integer.parseInt(txt_customer.getText());

        Customer customer = new Customer(id);
        customer.setVisible(true);

    }//GEN-LAST:event_lbl_add_cusMouseClicked

    private void txt_customerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_customerFocusGained
        // TODO add your handling code here:
        txt_customerName.setText("");
    }//GEN-LAST:event_txt_customerFocusGained

    private void txt_disKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_disKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_dis.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_dis.setEditable(false);

            } else {
                txt_dis.setEditable(true);
            }

        } else {
            txt_dis.setEditable(false);
        }

    }//GEN-LAST:event_txt_disKeyPressed

    private void txt_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_qty.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_qty.setEditable(false);

            } else {
                txt_qty.setEditable(true);
            }

        } else {
            txt_qty.setEditable(false);
        }

    }//GEN-LAST:event_txt_qtyKeyPressed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        Settings settings = new Settings(txt_id.getText(), 0);
        settings.setVisible(true);

    }//GEN-LAST:event_jLabel4MouseClicked

    private void txt_disFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_disFocusLost
        // TODO add your handling code here:
        txt_dis.setEditable(true);
    }//GEN-LAST:event_txt_disFocusLost

    private void txt_qtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_qtyFocusLost
        // TODO add your handling code here:
        txt_dis.setEditable(true);
    }//GEN-LAST:event_txt_qtyFocusLost

    private void rad_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_showActionPerformed
        if (rad_show.isSelected()) {
            txt_subtot.grabFocus();
        }
    }//GEN-LAST:event_rad_showActionPerformed

    private void rad_showMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rad_showMouseReleased
        if (rad_show.isSelected()) {
            txt_inv_balance.grabFocus();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_rad_showMouseReleased

    private void txt_qtyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_qtyMouseClicked
 
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_qtyMouseClicked

    private void txt_inv_subtotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_inv_subtotKeyPressed
        // TODO add your handling code here:
          if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_inv_subtot.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_inv_subtot.setEditable(false);

            } else {
                txt_inv_subtot.setEditable(true);
            }

        } else {
            txt_inv_subtot.setEditable(false);
        }

    }//GEN-LAST:event_txt_inv_subtotKeyPressed

    private void txt_inv_disKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_inv_disKeyPressed
        // TODO add your handling code here:
             if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_inv_dis.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_inv_dis.setEditable(false);

            } else {
                txt_inv_dis.setEditable(true);
            }

        } else {
            txt_inv_dis.setEditable(false);
        }
    }//GEN-LAST:event_txt_inv_disKeyPressed

    private void txt_inv_nettotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_inv_nettotKeyPressed
        // TODO add your handling code here:
              if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_inv_nettot.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_inv_nettot.setEditable(false);

            } else {
                txt_inv_nettot.setEditable(true);
            }

        } else {
            txt_inv_nettot.setEditable(false);
        }
    }//GEN-LAST:event_txt_inv_nettotKeyPressed

    private void txt_inv_paymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_inv_paymentKeyPressed
                 if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_inv_payment.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_inv_payment.setEditable(false);

            } else {
                txt_inv_payment.setEditable(true);
            }

        } else {
            txt_inv_payment.setEditable(false);
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_txt_inv_paymentKeyPressed

    private void txt_inv_balanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_inv_balanceKeyPressed
        // TODO add your handling code here:
               if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == 8 || evt.getKeyCode() == 110) {

            if (txt_inv_balance.getText().contains(".") && evt.getKeyCode() == 110) {
                txt_inv_balance.setEditable(false);

            } else {
                txt_inv_balance.setEditable(true);
            }

        } else {
            txt_inv_balance.setEditable(false);
        }
    }//GEN-LAST:event_txt_inv_balanceKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    private String genarateInvoiceId() {

        int count = 0;
        try {
            ResultSet dataFetch = DB.search("select count('id') as x from invoice");

            if (dataFetch.next()) {
                count = Integer.parseInt(dataFetch.getString("x"));
                count++;
                lbl_invoiceid.setText("In" + count);
                txt_customer.grabFocus();

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "In" + count;
    }

    DefaultListModel dlm = new DefaultListModel();

    private ListCellRenderer<? super String> getRenderer() {
        return new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list,
                    Object value, int index, boolean isSelected,
                    boolean cellHasFocus) {
                JLabel listCellRendererComponent = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                listCellRendererComponent.setBorder(BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), null));
                return listCellRendererComponent;
            }
        };
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private static javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbl_add_cus;
    private javax.swing.JLabel lbl_invoiceid;
    private javax.swing.JRadioButton rad_show;
    public static javax.swing.JTextField txt_customer;
    private javax.swing.JTextField txt_customerName;
    private javax.swing.JTextField txt_customerName1;
    private static javax.swing.JTextField txt_dPrice;
    private static javax.swing.JTextField txt_dis;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_inv_balance;
    private javax.swing.JTextField txt_inv_dis;
    private javax.swing.JTextField txt_inv_nettot;
    private javax.swing.JTextField txt_inv_payment;
    private javax.swing.JTextField txt_inv_subtot;
    private static javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_search;
    private static javax.swing.JTextField txt_subtot;
    // End of variables declaration//GEN-END:variables

    double subtotal = 0.0;
    double unitPrice = 0.0;
    double availableQty = 0.0;

    int uniteIndex = 0;
    int button_number = 1;
    int oldIndex = 0;

    void subtotal() {
        Double subtot = 0.0;
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        int rowCount = jTable2.getRowCount();
        int index = 0;
        while (rowCount > index) {
            Double tot = Double.parseDouble(dtm.getValueAt(index, 6).toString());
            subtot = subtot + tot;
            index++;
        }
        txt_inv_subtot.setText(subtot + "");
        subtotal = subtot;

    }

    void saveData() {
//        if (button_number < 7) {
//            dlm.addElement(button_number + "");
//
//            jList3.setModel(dlm);
//            jList3.setSelectedIndex(button_number - 1);

        TabData.setCount(oldIndex);

        TabData.setCus_num(txt_customer.getText());
        TabData.setCus_name(txt_customerName.getText());

        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
        if (jTable1.isRowSelected(jTable1.getSelectedRow())) {
            int row = jTable1.getSelectedRow();
            TabData.setT1_id(dtm1.getValueAt(row, 0).toString());
            TabData.setT1_itemName(dtm1.getValueAt(row, 1).toString());
            TabData.setT1_sprice(dtm1.getValueAt(row, 2).toString());
            TabData.setT1_exp(dtm1.getValueAt(row, 3).toString());
            TabData.setT1_onHand(dtm1.getValueAt(row, 4).toString());
        } else {
            TabData.setT1_id(null);
            TabData.setT1_itemName(null);
            TabData.setT1_sprice(null);
            TabData.setT1_exp(null);
            TabData.setT1_onHand(null);
        }

        TabData.setTxt_id(txt_id.getText());
        TabData.setTxt_discount(txt_dis.getText());
        TabData.setTxt_dprice(txt_dPrice.getText());
        TabData.setTxt_qty(txt_qty.getText());
        TabData.setTxt_subtotal(txt_subtot.getText());

        if (jTable1.isRowSelected(jTable1.getSelectedRow())) {
            TabData.setComboIndex(jComboBox1.getSelectedIndex());
        }
        int rowCount = jTable2.getRowCount();

        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();
        Vector v1 = new Vector();
        Vector v2 = new Vector();
        Vector v3 = new Vector();
        Vector v4 = new Vector();
        Vector v5 = new Vector();
        Vector v6 = new Vector();
        Vector v7 = new Vector();
        int index = 0;
        while (rowCount > 0) {
            v1.add(dtm2.getValueAt(index, 0));
            v2.add(dtm2.getValueAt(index, 1));
            v3.add(dtm2.getValueAt(index, 2));
            v4.add(dtm2.getValueAt(index, 3));
            v5.add(dtm2.getValueAt(index, 4));
            v6.add(dtm2.getValueAt(index, 5));
            v7.add(dtm2.getValueAt(index, 6));

            rowCount--;
            index++;
        }

        TabData.setT2_count(v1);
        TabData.setT2_id(v2);
        TabData.setT2_ItemName(v3);
        TabData.setT2_uPrice(v4);
        TabData.setT2_dprice(v5);
        TabData.setT2_qty(v6);
        TabData.setT2_tot(v7);

        TabData.setSubtot(txt_inv_subtot.getText());
        TabData.setDiscout(txt_inv_dis.getText());
        TabData.setNettot(txt_inv_nettot.getText());
        TabData.setPayment(txt_inv_payment.getText());
        TabData.setBalance(txt_inv_balance.getText());
//        }
    }

    void resetData() {

        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();

        subtotal = 0.0;

        txt_id.setText(null);
        txt_dis.setText(null);
        txt_dPrice.setText(null);
        txt_qty.setText(null);
        txt_subtot.setText(null);

        dtm2.setRowCount(0);
        dtm1.setRowCount(0);
        txt_customer.setText(null);
        txt_customerName.setText(null);
        txt_search.setText(null);

        txt_inv_balance.setText(null);
        txt_inv_payment.setText(null);
        txt_inv_nettot.setText(null);
        txt_inv_dis.setText(null);
        txt_inv_subtot.setText(null);
        jComboBox1.removeAllItems();

    }

    void dataRecall(int index) {
        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel dtm2 = (DefaultTableModel) jTable2.getModel();

        txt_customer.setText(TabData.getCus_num(index));
        txt_customerName.setText(TabData.getCus_name(index));

        Vector b = new Vector();

        b.add(TabData.getT1_id(index));

        b.add(TabData.getT1_itemName(index));
        b.add(TabData.getT1_sprice(index));
        b.add(TabData.getT1_exp(index));
        b.add(TabData.getT1_onHand(index));
        if (b.firstElement() != null) {
            dtm1.addRow(b);
            jTable1.setRowSelectionInterval(0, 0);
        }
        txt_id.setText(TabData.getTxt_id(index));
        txt_dis.setText(TabData.getTxt_discount(index));
        txt_dPrice.setText(TabData.getTxt_dprice(index));
        txt_qty.setText(TabData.getTxt_qty(index));
        txt_subtot.setText(TabData.getTxt_subtotal(index));

        jComboBox1.removeAllItems();
        if (jTable1.isRowSelected(jTable1.getSelectedRow())) {
            comboRecall(TabData.getTxt_id(index), index);
        }

        Vector b1 = (Vector) TabData.getT2_count(index);
        Vector b2 = (Vector) TabData.getT2_id(index);
        Vector b3 = (Vector) TabData.getT2_ItemName(index);
        Vector b4 = (Vector) TabData.getT2_uPrice(index);
        Vector b5 = (Vector) TabData.getT2_dprice(index);
        Vector b6 = (Vector) TabData.getT2_qty(index);
        Vector b7 = (Vector) TabData.getT2_tot(index);

        int rowcount = 0;
        while (b1.size() > rowcount) {

            Vector rowmaker = new Vector();
            rowmaker.add(b1.elementAt(rowcount));
            rowmaker.add(b2.elementAt(rowcount));
            rowmaker.add(b3.elementAt(rowcount));
            rowmaker.add(b4.elementAt(rowcount));
            rowmaker.add(b5.elementAt(rowcount));
            rowmaker.add(b6.elementAt(rowcount));
            rowmaker.add(b7.elementAt(rowcount));
            rowcount++;
            dtm2.addRow(rowmaker);

        }

        txt_inv_subtot.setText(TabData.getSubtot(index));
        txt_inv_dis.setText(TabData.getDiscout(index));
        txt_inv_nettot.setText(TabData.getNettot(index));
        txt_inv_payment.setText(TabData.getPayment(index));
        txt_inv_balance.setText(TabData.getBalance(index));
    }

    public static void comboRecall(String id, int index) {
        try {
            String idArray[] = id.split("-");
            jComboBox1.removeAllItems();

            ResultSet search1 = DB.search("SELECT mesure_unite FROM item WHERE id = '" + idArray[0] + "'");
            ResultSet search2 = DB.search("SELECT sub_unite_name FROM sub_item WHERE item_id = '" + idArray[0] + "'");

            if (search1.next()) {

                jComboBox1.addItem(search1.getString("mesure_unite"));
                while (search2.next()) {
                    jComboBox1.addItem(search2.getString("sub_unite_name"));

                }
            }
            jComboBox1.setSelectedIndex(TabData.getComboIndex(index));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void comboRecall(String id) {
        try {
            txt_dis.setText("");
            txt_dPrice.setText("");
            txt_qty.setText("");
            txt_subtot.setText("");

            String idArray[] = id.split("-");

            jComboBox1.removeAllItems();

            ResultSet search1 = DB.search("SELECT mesure_unite FROM item WHERE id = '" + idArray[0] + "'");
            ResultSet search2 = DB.search("SELECT sub_unite_name FROM sub_item WHERE item_id = '" + idArray[0] + "'");

            if (search1.next()) {

                jComboBox1.addItem(search1.getString("mesure_unite"));
                while (search2.next()) {
                    jComboBox1.addItem(search2.getString("sub_unite_name"));

                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void warantyCardNo(String itemid, String invoiceid) {

        int count = 0;
        try {
            ResultSet dataFetch = DB.search("select count('id') as x from waranty_clam");

            if (dataFetch.next()) {
                count = Integer.parseInt(dataFetch.getString("x"));
                count++;
                String code = "W" + (1000000 + count);

                JOptionPane.showMessageDialog(this, code, "Enter this code to waranty card", JOptionPane.INFORMATION_MESSAGE);
                DB.iud("INSERT INTO waranty_clam  VALUES('" + code + "','" + itemid + "','" + invoiceid + "',now(),'1','" + Common.SystemData.getSystemUser() + "')");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void billPrint(String invoice, String systemUser) {
        try {

            InputStream is = new FileInputStream("D:\\java\\Hardware\\reports\\Invoice.jasper");
//             String path = "D:\\Hardware\\report4.jrxml";
//             JasperReport compilereport = JasperCompileManager.compileReport(path);
            //JREmptyDataSource datasource = new JREmptyDataSource();
            Map<String, Object> map = new HashMap<>();

            map.put("Invoice", invoice);
            map.put("Cashier", systemUser);

            JasperPrint fillReport = JasperFillManager.fillReport(is, map, DB.getNewConnection());
            if (rad_show.isSelected()) {
                JasperViewer.viewReport(fillReport, false);
            }
            JasperPrintManager.printReport(fillReport, false);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
